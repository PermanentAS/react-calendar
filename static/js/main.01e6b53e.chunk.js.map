{"version":3,"sources":["components/Header/index.js","components/Header/Header.js","components/Navigation/Navigation.js","actions/index.js","components/Navigation/index.js","components/WeekDays/index.js","components/WeekDays/WeekDays.js","components/DaysGrid/DaysGrid.js","components/DaysGrid/index.js","components/TodayButton/TodayButton.js","components/TodayButton/index.js","components/Popup/Popup.js","components/Popup/index.js","Calendar.js","reducers/index.js","store.js","index.js"],"names":["Header","connect","_ref2","today","_ref","react_default","a","createElement","className","mapDispatchToProps","previousMounthClickHandler","currentMonth","type","payload","dateFns","addMonths","nextMounthClickHandler","Navigation","currentMonthFormatted","format","onClick","WeekDays","weekdays","firstDayOfWeek","startOfWeek","weekdayStyle","width","borderLeft","padding","i","push","key","style","addDays","paddingLeft","onSelectedDateClickHandler","day","selectedDate","showPopup","DaysGrid","events","monthStart","startOfMonth","monthEnd","endOfMonth","startDate","endDate","endOfWeek","rows","days","formattedDate","dayStyle","height","borderBottom","borderRight","rowStyle","margin","_loop","cloneDay","todayEvents","length","isSameDay","date","concat","isSameMonth","parse","map","event","index","flexWrap","flexDirection","onTodayClickHandler","Date","TodayButton","Popup","state","inputValue","popupStyle","position","top","left","right","bottom","backgroundColor","onInputChangeHandler","e","_this","setState","target","value","this","_this$props","props","onPopupAddClickHandler","onPopupCloseClickHandler","aria-label","aria-describedby","onChange","Component","Calendar","todayDay","Fragment","components_Header","components_Navigation","components_WeekDays","components_DaysGrid","components_TodayButton","components_Popup","initialState","reducer","arguments","undefined","action","Object","objectSpread","toConsumableArray","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_Calendar","document","getElementById"],"mappings":"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","file":"static/js/main.01e6b53e.chunk.js","sourcesContent":["import Header from \"./Header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Header = ({ today }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n      <span className=\"navbar-brand\">React-calendar</span>\r\n      <span className=\"text-light\">Today is: {today}</span>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({today}) => {\r\n  return {\r\n    today\r\n  }\r\n} \r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport dateFns from \"date-fns\";\r\nimport {\r\n  previousMounthClickHandler,\r\n  nextMounthClickHandler\r\n} from \"./../../actions\";\r\n\r\nconst Navigation = ({\r\n  previousMounthClickHandler,\r\n  nextMounthClickHandler,\r\n  currentMonth\r\n}) => {\r\n  let currentMonthFormatted = dateFns.format(currentMonth, \"MMMM YYYY\");\r\n  return (\r\n    <div className=\"mt-3 container-fluid\">\r\n      <div className=\"row\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-light\"\r\n          onClick={() => previousMounthClickHandler(currentMonth)}\r\n        >\r\n          <i className=\"fas fa-arrow-left fa-sm\" />\r\n        </button>\r\n        <div className=\"col-sm text-center mt-2 font-weight-bold\">\r\n          {currentMonthFormatted}\r\n        </div>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-light\"\r\n          onClick={() => nextMounthClickHandler(currentMonth)}\r\n        >\r\n          <i className=\"fas fa-arrow-right fa-sm\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ currentMonth }) => {\r\n  return {\r\n    currentMonth\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  previousMounthClickHandler,\r\n  nextMounthClickHandler\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Navigation);\r\n","import dateFns from \"date-fns\";\r\n\r\nconst todayDay = () => {\r\n  return {\r\n    type: \"TODAY_DAY\",\r\n    payload: dateFns.format(new Date(), \"D MMMM YYYY\")\r\n  };\r\n};\r\n\r\nconst onTodayClickHandler = () => {\r\n  return {\r\n    type: \"ON_TODAY_CLICK_HANDLER\",\r\n    payload: { currentMonth: new Date(), selectedDate: new Date() }\r\n  };\r\n};\r\n\r\nconst previousMounthClickHandler = currentMonth => {\r\n  return {\r\n    type: \"ON_PREV_MOUNTH_CLICK_HANDLER\",\r\n    payload: dateFns.addMonths(currentMonth, -1)\r\n  };\r\n};\r\n\r\nconst nextMounthClickHandler = currentMonth => {\r\n  return {\r\n    type: \"ON_NEXT_MOUNTH_CLICK_HANDLER\",\r\n    payload: dateFns.addMonths(currentMonth, 1)\r\n  };\r\n};\r\n\r\nconst onSelectedDateClickHandler = day => {\r\n  return {\r\n    type: \"ON_SELECTED_DAY_CLICK_HANDLER\",\r\n    payload: {\r\n      selectedDate: day,\r\n      showPopup: true\r\n    }\r\n  };\r\n};\r\n\r\nconst onPopupAddClickHandler = (selectedDate, inputValue) => {\r\n  let newEvent = {\r\n    date: selectedDate,\r\n    payload: inputValue\r\n  };\r\n\r\n  return {\r\n    type: \"ON_POPUP_ADD_CLICK_HANDLER\",\r\n    payload: newEvent\r\n  };\r\n};\r\n\r\nconst onPopupCloseClickHandler = () => {\r\n  return {\r\n    type: \"ON_POPUP_CLOSE_CLICK_HANDLER\",\r\n    payload: {\r\n      showPopup: false\r\n    }\r\n  };\r\n};\r\n\r\nexport {\r\n  todayDay,\r\n  onTodayClickHandler,\r\n  previousMounthClickHandler,\r\n  nextMounthClickHandler,\r\n  onSelectedDateClickHandler,\r\n  onPopupCloseClickHandler,\r\n  onPopupAddClickHandler\r\n};\r\n","import Navigation from \"./Navigation\";\r\n\r\nexport default Navigation;\r\n","import WeekDays from \"./WeekDays\";\r\n\r\nexport default WeekDays;\r\n","import React from \"react\";\r\nimport dateFns from \"date-fns\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst WeekDays = ({ currentMonth }) => {\r\n  let weekdays = [];\r\n  let firstDayOfWeek = dateFns.startOfWeek(currentMonth);\r\n  const weekdayStyle = {\r\n    width: \"14%\",\r\n    borderLeft: \"1px solid gray\",\r\n    padding: \"5px 10px\"\r\n  };\r\n\r\n  const navbarWeekdayStyle = {\r\n    paddingLeft: \"2%\"\r\n  };\r\n\r\n  for (let i = 0; i < 7; i++) {\r\n    weekdays.push(\r\n      <div key={i} className=\"\" style={weekdayStyle}>\r\n        {dateFns.format(dateFns.addDays(firstDayOfWeek, i), \"ddd\")}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <nav\r\n      className=\"bg-dark mt-3 navbar-weekday text-white text-left d-flex\"\r\n      style={navbarWeekdayStyle}\r\n    >\r\n      {weekdays}\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ currentMonth }) => {\r\n  return {\r\n    currentMonth\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(WeekDays);\r\n","import React from \"react\";\r\nimport dateFns from \"date-fns\";\r\nimport { connect } from \"react-redux\";\r\nimport { onSelectedDateClickHandler } from \"./../../actions\";\r\n\r\nconst DaysGrid = ({\r\n  currentMonth,\r\n  selectedDate,\r\n  events,\r\n  onSelectedDateClickHandler\r\n}) => {\r\n  const monthStart = dateFns.startOfMonth(currentMonth);\r\n  const monthEnd = dateFns.endOfMonth(currentMonth);\r\n  const startDate = dateFns.startOfWeek(monthStart);\r\n  const endDate = dateFns.endOfWeek(monthEnd);\r\n\r\n  const rows = [];\r\n  let days = [];\r\n  let day = startDate;\r\n  let formattedDate = \"\";\r\n\r\n  const dayStyle = {\r\n    width: \"14%\",\r\n    height: \"100px\",\r\n    borderLeft: \"1px solid gray\",\r\n    borderBottom: \"1px solid gray\",\r\n    borderRight: \"1px solid gray\",\r\n    padding: \"8px 10px\"\r\n  };\r\n\r\n  const rowStyle = {\r\n    padding: \"0px\",\r\n    margin: \"0px\"\r\n  };\r\n\r\n  const navStyle = {\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"column\",\r\n    paddingLeft: \"2%\"\r\n  };\r\n\r\n  while (day <= endDate) {\r\n    for (let i = 0; i < 7; i++) {\r\n      formattedDate = dateFns.format(day, \"D\");\r\n      const cloneDay = day;\r\n      let todayEvents = [];\r\n\r\n      for (let i = 0; i < events.length; i++) {\r\n        if (dateFns.isSameDay(day, events[i].date)) {\r\n          todayEvents.push(events[i].payload);\r\n        }\r\n      }\r\n\r\n      days.push(\r\n        <div\r\n          className={`dayStyle ${\r\n            !dateFns.isSameMonth(day, monthStart)\r\n              ? \"text-secondary\"\r\n              : dateFns.isSameDay(day, selectedDate)\r\n              ? \"text-primary font-weight-bold\"\r\n              : \"font-weight-bold\"\r\n          }`}\r\n          key={day}\r\n          onClick={() => onSelectedDateClickHandler(dateFns.parse(cloneDay))}\r\n          style={dayStyle}\r\n        >\r\n          <span>{formattedDate}</span>\r\n          <br />\r\n          {todayEvents.map((event, index) => {\r\n            return (\r\n              <div className=\"font-weight-normal\" key={index}>\r\n                {event}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n      todayEvents = [];\r\n      day = dateFns.addDays(day, 1);\r\n    }\r\n    rows.push(\r\n      <div className=\"row d-flex\" style={rowStyle} key={day}>\r\n        {days}\r\n      </div>\r\n    );\r\n    days = [];\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-light text-left\" style={navStyle}>\r\n      {rows}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ currentMonth, selectedDate, events }) => {\r\n  return {\r\n    currentMonth,\r\n    selectedDate,\r\n    events\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { onSelectedDateClickHandler };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DaysGrid);\r\n","import DaysGrid from \"./DaysGrid\";\r\n\r\nexport default DaysGrid;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { onTodayClickHandler } from \"./../../actions\";\r\n\r\nconst TodayButton = ({onTodayClickHandler}) => {\r\n  return (\r\n    <div className=\"mt-5 container-fluid text-center \">\r\n      <button\r\n        type=\"button\"\r\n        className=\"pl-5 pr-5 pt-3 pb-3 btn btn-light text-uppercase font-weight-bold\"\r\n        onClick={onTodayClickHandler}\r\n      >\r\n        Go To Today\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onTodayClickHandler }\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(TodayButton);\r\n","import TodayButton from \"./TodayButton\";\r\n\r\nexport default TodayButton;\r\n","import React, { Component } from \"react\";\r\nimport dateFns from \"date-fns\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  onPopupCloseClickHandler,\r\n  onPopupAddClickHandler\r\n} from \"./../../actions\";\r\n\r\nclass Popup extends Component {\r\n  state = {\r\n    inputValue: \"\"\r\n  };\r\n\r\n  popupStyle = {\r\n    position: \"absolute\",\r\n    top: \"0\",\r\n    left: \"0\",\r\n    right: \"0\",\r\n    bottom: \"0\",\r\n    backgroundColor: \"rgba(0,0,0, 0.7)\"\r\n  };\r\n\r\n  onInputChangeHandler = e => {\r\n    this.setState({\r\n      inputValue: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n\r\n    const {\r\n      selectedDate,\r\n      onPopupAddClickHandler,\r\n      onPopupCloseClickHandler\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"popup\" style={this.popupStyle}>\r\n        <div className=\"card\" style={{ width: \"600px\", margin: \"300px auto\" }}>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">\r\n              {dateFns.format(selectedDate, \"D/MM/YYYY\")}\r\n            </h5>\r\n            <h5 className=\"card-title mb-2 text-muted\">Input your event</h5>\r\n\r\n            <div className=\"input-group mb-3\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                aria-label=\"Default\"\r\n                aria-describedby=\"inputGroup-sizing-default\"\r\n                value={inputValue}\r\n                onChange={this.onInputChangeHandler}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"d-flex justify-content-between\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => {\r\n                  onPopupAddClickHandler(selectedDate, inputValue);\r\n                }}\r\n              >\r\n                Add\r\n              </button>\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={onPopupCloseClickHandler}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ currentMonth, selectedDate, events }) => {\r\n  return {\r\n    currentMonth,\r\n    selectedDate,\r\n    events\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = { onPopupCloseClickHandler, onPopupAddClickHandler };\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Popup);\r\n","import Popup from \"./Popup\";\r\n\r\nexport default Popup;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { todayDay } from \"./actions\";\n\nimport Header from \"./components/Header\";\nimport Navigation from \"./components/Navigation\";\nimport WeekDays from \"./components/WeekDays\";\nimport DaysGrid from \"./components/DaysGrid\";\nimport TodayButton from \"./components/TodayButton\";\nimport Popup from \"./components/Popup\";\n\nclass Calendar extends Component {\n  componentWillMount() {\n    this.props.todayDay();\n  }\n\n  render() {\n    const { showPopup } = this.props;\n\n    return (\n      <React.Fragment>\n        <Header />\n        <Navigation />\n        <WeekDays />\n        <DaysGrid />\n        <TodayButton />\n\n        {showPopup ? <Popup /> : null}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ showPopup }) => {\n  return { showPopup };\n};\n\nconst mapDispatchToProps = {\n  todayDay\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Calendar);\n","const initialState = {\r\n  today: null,\r\n  currentMonth: new Date(),\r\n  selectedDate: new Date(),\r\n  showPopup: false,\r\n  events: [\r\n    {\r\n      date: new Date(),\r\n      payload: \"Test event 1\"\r\n    },\r\n    // {\r\n    //   date: dateFns.addDays(new Date(), 1),\r\n    //   payload: \"Test event 2\"\r\n    // },\r\n    // {\r\n    //   date: dateFns.addDays(new Date(), -1),\r\n    //   payload: \"Test event 3\"\r\n    // }\r\n  ]\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"TODAY_DAY\":\r\n      return {\r\n        ...state,\r\n        today: action.payload\r\n      };\r\n    case \"ON_TODAY_CLICK_HANDLER\":\r\n    case \"ON_SELECTED_DAY_CLICK_HANDLER\":\r\n    case \"ON_POPUP_CLOSE_CLICK_HANDLER\":\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n      \r\n    case \"ON_POPUP_ADD_CLICK_HANDLER\":\r\n    return {\r\n      ...state,\r\n      events: [...state.events, action.payload],\r\n      showPopup: false\r\n    };\r\n    case \"ON_PREV_MOUNTH_CLICK_HANDLER\":\r\n    case \"ON_NEXT_MOUNTH_CLICK_HANDLER\":\r\n      return {\r\n        ...state,\r\n        currentMonth: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\n\r\nimport reducer from \"./reducers\";\r\n\r\nconst store = createStore(reducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport Calendar from \"./Calendar\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Calendar />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}